/*
 * Copyright (C) 2015 Yann D'Isanto
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
package org.netbeans.modules.mongodb.indexes;

import org.bson.Document;
import org.netbeans.modules.mongodb.indexes.Index.TextOptions;
import org.netbeans.modules.mongodb.ui.util.JsonEditor;
import org.openide.util.NbBundle.Messages;

/**
 *
 * @author Yann D'Isanto
 */
@Messages({
    "weigthsEditorTitle=Weigths document"
})
public class TextOptionsPanel extends javax.swing.JPanel {

    /**
     * Creates new form TextOptionsPanel
     */
    public TextOptionsPanel() {
        initComponents();
    }
    
    public TextOptions getTextOptions() {
        String wJson = weightsField.getText().trim();
        Document weights = wJson.isEmpty()? null : Document.parse(wJson);
        String defaultLanguage = defaultLanguageField.getText().trim();
        String languageOverride = languageOverrideField.getText().trim();
        Integer indexVersion = indexVersionCheckBox.isSelected() ? (Integer) indexVersionSpinner.getValue() : null;
        return new TextOptions(
            weights, 
            defaultLanguage.isEmpty() ? null : defaultLanguage, 
            languageOverride.isEmpty() ? null : languageOverride, 
            indexVersion);
    }
    
    public void setOptions(TextOptions options) {
        Document weights = options.getWeights();
        if(weights != null) {
            weightsField.setText(weights.toJson());
        }
        String defaultLanguage = options.getDefaultLanguage();
        if(defaultLanguage != null) {
            defaultLanguageField.setText(defaultLanguage);
        }
        String languageOverride = options.getLanguageOverride();
        if(languageOverride != null) {
            languageOverrideField.setText(languageOverride);
        }
        Integer indexVersion = options.getIndexVersion();
        if(indexVersion != null) {
            indexVersionCheckBox.setSelected(true);
            indexVersionSpinner.setValue(indexVersion);
        } else {
            indexVersionCheckBox.setSelected(false);
        }
    }
    
    void clearOptions() {
        weightsField.setText("");
        defaultLanguageField.setText("");
        languageOverrideField.setText("");
        indexVersionSpinner.setValue(2);
        indexVersionSpinner.setEnabled(false);
        indexVersionCheckBox.setSelected(false);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        weightsLabel = new javax.swing.JLabel();
        defaultLanguageLabel = new javax.swing.JLabel();
        languageOverrideLabel = new javax.swing.JLabel();
        weightsField = new javax.swing.JTextField();
        defaultLanguageField = new javax.swing.JTextField();
        languageOverrideField = new javax.swing.JTextField();
        editWeightsButton = new javax.swing.JButton();
        indexVersionCheckBox = new javax.swing.JCheckBox();
        indexVersionSpinner = new javax.swing.JSpinner();
        clearWeightsButton = new javax.swing.JButton();

        org.openide.awt.Mnemonics.setLocalizedText(weightsLabel, org.openide.util.NbBundle.getMessage(TextOptionsPanel.class, "TextOptionsPanel.weightsLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(defaultLanguageLabel, org.openide.util.NbBundle.getMessage(TextOptionsPanel.class, "TextOptionsPanel.defaultLanguageLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(languageOverrideLabel, org.openide.util.NbBundle.getMessage(TextOptionsPanel.class, "TextOptionsPanel.languageOverrideLabel.text")); // NOI18N

        weightsField.setEditable(false);

        org.openide.awt.Mnemonics.setLocalizedText(editWeightsButton, org.openide.util.NbBundle.getMessage(TextOptionsPanel.class, "TextOptionsPanel.editWeightsButton.text")); // NOI18N
        editWeightsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editWeightsButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(indexVersionCheckBox, org.openide.util.NbBundle.getMessage(TextOptionsPanel.class, "TextOptionsPanel.indexVersionCheckBox.text")); // NOI18N
        indexVersionCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                indexVersionCheckBoxActionPerformed(evt);
            }
        });

        indexVersionSpinner.setModel(new javax.swing.SpinnerNumberModel(2, 1, 2, 1));
        indexVersionSpinner.setEnabled(false);

        org.openide.awt.Mnemonics.setLocalizedText(clearWeightsButton, org.openide.util.NbBundle.getMessage(TextOptionsPanel.class, "TextOptionsPanel.clearWeightsButton.text")); // NOI18N
        clearWeightsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearWeightsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(weightsLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(weightsField, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editWeightsButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clearWeightsButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(defaultLanguageLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(defaultLanguageField))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(languageOverrideLabel)
                            .addComponent(indexVersionCheckBox))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(indexVersionSpinner)
                            .addComponent(languageOverrideField))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(weightsLabel)
                    .addComponent(editWeightsButton)
                    .addComponent(weightsField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearWeightsButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(defaultLanguageLabel)
                    .addComponent(defaultLanguageField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(languageOverrideLabel)
                    .addComponent(languageOverrideField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(indexVersionSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(indexVersionCheckBox))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void editWeightsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editWeightsButtonActionPerformed
        String json = weightsField.getText().trim();
        Document document = JsonEditor.show(Bundle.weigthsEditorTitle(), json.isEmpty() ? null : Document.parse(json));
        if(document != null) {
            weightsField.setText(document.toJson());
        }
    }//GEN-LAST:event_editWeightsButtonActionPerformed

    private void indexVersionCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_indexVersionCheckBoxActionPerformed
        indexVersionSpinner.setEnabled(indexVersionCheckBox.isSelected());
    }//GEN-LAST:event_indexVersionCheckBoxActionPerformed

    private void clearWeightsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearWeightsButtonActionPerformed
        weightsField.setText("");
    }//GEN-LAST:event_clearWeightsButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearWeightsButton;
    private javax.swing.JTextField defaultLanguageField;
    private javax.swing.JLabel defaultLanguageLabel;
    private javax.swing.JButton editWeightsButton;
    private javax.swing.JCheckBox indexVersionCheckBox;
    private javax.swing.JSpinner indexVersionSpinner;
    private javax.swing.JTextField languageOverrideField;
    private javax.swing.JLabel languageOverrideLabel;
    private javax.swing.JTextField weightsField;
    private javax.swing.JLabel weightsLabel;
    // End of variables declaration//GEN-END:variables
}
